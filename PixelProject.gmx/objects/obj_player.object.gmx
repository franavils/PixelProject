<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//States
enum playerStates
{
    idleNoGun,
    walkNoGun,
    fallNoGun,
    idleGun,
    walkGun,
    fallGun
    

}

currentState = playerStates.idleNoGun;
 
//Movement
grav = 0.4;
hsp = 0;
vsp = 0;
jumpspeed = 7;
movespeed =2;

fatigue = 0;
speedAnimation = 0.1;




//Shooting
delay = 4;
bullet = -1;
back = 5;
ammo = 0;
armedAndDangerous = false;



if (global.checkpointR == room) 
{
    x = global.checkpointx;
    y = global.checkpointy;

}

key_down = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (currentState)
{
    case playerStates.idleNoGun: scr_player_idle_no_gun();
    break;
    case playerStates.walkNoGun: scr_player_run_no_gun();
    break;
    case playerStates.fallNoGun: scr_player_fall_no_gun();
    break;
    
    case playerStates.idleGun: scr_player_idle_gun();
    break;
    case playerStates.walkGun: scr_player_run_gun();
    break;
    case playerStates.fallGun: scr_player_fall_gun();
    break;

}




/*
//Get the player's input
scr_get_input();



//React to inputs
move = key_left + key_right;
hsp = move * movespeed;

//Falling
if (vsp &lt; 10) vsp += grav;

//Jump
if (place_meeting(x,y+1,obj_block))
{
    if (key_jump) vsp = -jumpspeed;
}

//Shoot
if (key_shoot)
{
    bullet = instance_create(x + sprite_width/2 ,y+6, obj_bullet);
    
    
    if (image_xscale = 1)
    {
    hsp -= back;
    bullet.direction = 0;
    } else 
    {
    hsp += back;
    bullet.direction = 180;
    }
    
} 


//Pick-up
if (place_meeting (x, y , obj_gun))
{
    ammo += 4;
    

}



//Horizontal Collision
scr_player_collisions();

//Animate
if (move != 0) 
{
        image_xscale = move;

}


//When not holding a gun
//if (armedAndDangerous = false)
//{

if (place_meeting (x, y+1,obj_block))
{
    if (move != 0) 
    {
    PlayerStates = 1;
    
    }

    else 
    {
        PlayerStates = 0;
    
    }
    
}
else
{
    PlayerStates = 2;
}
//}
/*
//When holding a gun
if (armedAndDangerous)
{

if (place_meeting (x, y+1,obj_block))
{
    if (move != 0) 
    {
    PlayerStates = 4;
    
    }


    else 
    {
    PlayerStates = 3;    
    
    }
    
}
else
{
    PlayerStates = 5;
}


}

//Player states

if (PlayerStates.idle)
{
    
   sprite_index = spr_player_idle; 
}
if (PlayerStates.walkingNoGun) 
{
    sprite_index = spr_player_run;
}
if (PlayerStates.jumpingNoGun)
{
    sprite_index = spr_player_fall;
}
if (PlayerStates.idleGun)
{
    sprite_index = spr_player_idle;
}
if (PlayerStates.walkingGun)
{
    sprite_index = spr_player_walk_gun;
}
if (PlayerStates.jumpingGun)
{
    sprite_index = spr_player_fall;
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
